#!/usr/bin/env python3

import sys
from pathlib import Path


""" Define location db-file"""
db_location = str(Path.home()) + '/.local/share/py-templates/'
""" Define location of templates """
template_location = str(Path.home()) + '/templates/'
""" List of items, to be stored in db-file """
items = []

## TODO: lookup how to store objects in db-file OR create to_string for text-based storage (??How to read??).
class Template:
    """ A class definition for each template, which is stored in db-file."""

    def __init__(self, name: str, arguments: list):
        self.name = name
        self.arguments = arguments


def print_usage():
    print()
    print("Usage: gen_template <argument>\n"
          "\n"
          "-g   --generate <template> <arguments>       -- Generate a new template.\n"
          "-l   --list                                  -- List all templates.\n"
          "-la  --list-arguments <template>             -- List possible arguments for given template.\n"
          "-o   --output                                -- The output filename, standard out by default.\n"
          "\n"
          "-h   --help                                  -- Display this help message.\n"
          "-v   --version                               -- Display version info.\n")


def print_version():
    print(  "gen_template 0.1.0\n"
            "Copyright (C) 2019 Stef Tweepenninckx\n"
    )


if __name__ == '__main__':
    if len(sys.argv) <= 1:
        print_usage()
    elif sys.argv[1] == '-h' or sys.argv[1] == '--help':
        print_usage()
    elif sys.argv[1] == '-v' or sys.argv[1] == '--version':
        print_version()
    elif sys.argv[1] == '-g' or sys.argv[1] == '--generate':
        print("TODO: generate")
        # TODO: integrate -o option (check if sys.argv contains -o, cuz len(arguments) can differ)
    elif sys.argv[1] == '-l' or sys.argv[1] == '--list':
        print("TODO: list")
    elif sys.argv[1] == '-la' or sys.argv[1] == '--list-arguments':
        print("TODO: list arguments")
    else:
        print_usage()
